{smcl}
{cmd:help genyhats}
{hline}

{title:Title}

{p2colset 3 15 15 2}{...}
{p2col :{cmdab:genyh:ats} {hline 2}}Generates so-called {it:yhat} affinity measures for multi-level (hierarchical) 
data (for clarification see {cmd:stackMe}'s {help stackme##Genericvariable:Generic Variables} help-text before 
reading this help-text){p_end}
{p2colreset}{...}


{title:Syntax}

{p 8 16 2}
{cmdab:genyh:ats} {help varlist:{it:indepvarlist}} {ifin} {weight} , options{p_end}

{p 12 12 2}Generate multiple bivariate y-hat predictors of the same (optioned) {depvar}, one outcome for each  
{help indepvar:{it:indepvar}}. The resulting bivariate outcome yhats will be named by prefixing (with "yi_" or such other 
string set by option {opt ipr:efix} each {help varlist:{it:indepvar}} name.
	
		or

{p 8 17 11}
{cmdab:genyh:ats} [yd_]{help varlist:{it:depvar}}: {help varlist:{it:indepvarlist}} {ifin} {weight} [ ||  {break}
[yd_]{help varlist:{it:depvar}}: {help varlist:{it:indepvarlist}} {weight} ] [ || ... ]  || {break} 
[yd_]{help varlist:{it:depvar}}: {help varlist:{it:indepvarlist}} {weight} , options{p_end}


{p 12 12 2}Generate one or more multivariate y-hat predictors, one for each {depvar}. The resulting multivariate 
outcome estimate(s) will be named by prefixing each {depvar}name in the above example with "yd_" (or other string used 
to prefix the depvar name). Input variables do not need to be battery members. Also variables that have been duplicated across battery 
members can be employed.

{p 4 4 2}Though illustrated with especially appropriate examples, the two syntax formats are interchangeable. Each 
can be used with either stacked or unstacked data. But {bf:speed of generating multivariate outcomes} can be much 
increased by grouping together varlists that employ the same options. {ifin} expressions should follow the first 
varlist; options should follow the last varlist; {weight} expressions can follow any or all varlists.

{p 4 4 2}aweights, fweights, iweights, and pweights are allowed; see {help weight}.


{synoptset 20 tabbed}{...}
{synopthdr}
{synoptline}
{p2colset 4 29 27 2}
{p 2}{ul:Estimation options}

{synopt :{opt dep:varname(varname)}}(required for bivariate analyses) the dependent variable for which affinities are 
to be estimated{p_end}
{synopt :{opt mul:tivariate}}invoke a multivariate analysis instead of the default (multiple) bivariate analys(es){p_end}
{synopt :{opt log:it}}invoke a logit model instead of the default linear regression{p_end}
{synopt :{opt adj:ust(mean|constant|no)}}adjust the y_hat by subtracting the mean (default) or 
subtracting the constant term. Alternatively, make no adjustment.{p_end}

{p 2}{ul:Data-structure options}

{synopt :{opt con:textvars(varlist)}}(generally unspecified) the variables identifying different electoral 
contexts (required if the default recorded as a 'data characteristic' by command {cmdab:SMset:contexts} is 
to be overriden).{p_end}
{synopt :{opt nocon:texts}}override the default behavior that generates y-hats for each context separately{p_end}
{synopt :{opt nosta:cks}}override the default behavior that treats each stack as a separate context{p_end}


{p 2}{ul:Output and naming options}

{synopt :{opt ipr:efix}}the character string that will prefix each {help varlist:indepvar} name for outcome 
variable(s) generated by bivariate analyses according to syntax 1. Default is to use the prefix "yi_".{p_end}
{synopt :{opt dpr:efix}}the character string that will prefix the {help varlist:depvar)} name of the 
only variable generated by multivariate analysis (using option {opt mul:tivariate} with Syntax 1). Default
is to use the prefix "yd_".{p_end}
{synopt :{opt rep:lace}}drop all {it:indepvars} after the generation of y-hats{p_end}
{synopt :{opt eff:ects(window|rtf|csv|html|no)}}display a summary table of stack-specific effects 
from the regression used to generate a y-hat{p_end}
{synopt :{opt efo:rmat(beta|custom|default)}}use exponent format for coefficients reported 
by the effects() option{p_end}

{p 2}{ul:Diagnostics options}

{synopt :{opt lim:itdiag(#)}}limit diagnostics to the first # contexts processed{p_end}
{synopt :{opt nod:iag}}equivalent to {opt lim:itdiag(0)}{p_end}
{synopt :{opt ext:radiag}}(seldom used) directly output the results of each stack-specific regression.{p_end}

{synoptline}


{title:Description}

{pstd}
{cmd:genyhats} generates (multiple) measures of {help stackme##Affinitymeasures:affinity} between {help indepvars} 
and {help depvars} (see the section on {help stackme##Genericvariable:generic analysis} in the {help stackMe} 
helpfile). It uses Stata's {cmd:predict} command to produce predicted values of the depvar for each 
observation. These sets of so-called "y-hats" are each adjusted by subtracting the mean from the prediction 
equation (separately for each stack and context, if present) - unless some other adjustment is optioned by 
using the {opt adj:ust} option. These y-hats are tnen saved under an appropriate variable name as will be 
described. Estimation is by OLS unless {cmd:logit} is optioned.{break}
{space 3}NOTE that, if the y_hat is not adjusted, the stack-specific mean will be included in the estimated y-hats 
creating inconsistencies, as between stacks and contexts, that can result in large anomalies in subsequent 
analyses using these variables. As a result, in published work the choice of subtracting the mean has mostly
been employed (and is the default option in {cmd:genyhats}). However, the option of subtracting the constant 
term (intercept) is also available and might be preferable unless the intended analysis to be performed with 
these y-hat variables employs a commend explicitely intended for multi-level data (such as Stata's {help mixed} 
command). It saves each resulting affinity measure into a corresponding {it:yhat} variable separately for each 
stack and context (unless either or both of options {opt nos:tacks} or {opt noc:ontext} are employed). 

{pstd}
The estimation model can be either multivariate or bivariate. The resulting {it:yhat} names are based on the 
{it:depvarname} for multivariate models (being prefixed by "yd_" or such other prefix as may be established 
by the prefix that introduces a multivariate varlist). For bivariate models the {it:yhat} names are derived 
from each {it:indepvarname} (being prefixed by "yi_" or such other prefix as may be established by option 
{opt ip:refix}). Univariate models are generally used when multiple {it:indepvars} are each to be linearly 
transformed into a {it:y-hat} equivalent for use in later multivariate analyses of {help stackme##Genericvariable:generic} 
{it:depvar}s, although there might be occasion to employ a multivariate model for the same purpose. More 
usually multivariate models have a different purpose: perhaps to create an indicator for an abstract concept 
such as social class from a set of (presumably) class-related {help varlist:indepvars}; but such an abstract 
indicator would still need to be transformed into a y-hat or proximity or some other {help stackme##Genericvariable:affinity} 
measure before it could be used in {help stackme##Genericvariable:generic} variable analyses. The character 
string prefixing each multivariate {varlist} can help the user to avoid ambiguity on this score by permitting 
a different character string to prepend the name of each resulting y-hat.

{pstd}
The two syntaxes may be combined, in that any appearance of "||" (or "," or the end of the command) 
causes the previously listed variable(s) to be treated as a separate {varlist} whose treatment may be 
either multivariate or bivariate, depending on whether that varlist is preceded by a prefix (identified 
as such by the appearance of a colon at the end of the prefix varname), as explained above.

{pstd}
The {cmd:genyhats} command can be issued before or after stacking. If issued after stacking, by default 
it treats each stack as a separate context to take into account along with any higher-level contexts. 
This yields the same y-hat estimates as would have been created for separate unstacked depvars. However, 
the {opt nos:tacks}, {opt noc:ontexts} and/or {opt con:textvars} options can be employed to override this 
default behavior, depending on what makes methodological sense. If issued after stacking the command 
(or relevant {varlist}) need only be used once for the (generic) depvar instead of separately for each 
unstacked depvar. This makes {cmd:genyhats} simpler to use and saves creating a mass of temporary 
variables that could hugely increase the size of the unstacked datafile.{break}
{space 3}NOTE that, when used in subsequent analyses (for instance in regression models), estimated 
coefficients for y-hat variables are not readily interpretable. In the absence of error variance and 
multicolinearity, each coefficient calculated for a y-hat affinity variable would be +1.0 (meaning that 
it perfectly tracked the {depvar} for which it's affinity was calculated.) The actual values of these 
coefficients thus constitute a quasi-measure of covariance - like a partial correlation coefficient. 
However, standard errors (along with beta coefficients from OLS) retain their customary meanings.


{title:Options}

{p 2}{ul:Estimation options}{p_end}

{phang}
{opt dep:varname(varname)} (required for bivariate analyses) the dependent variable for which (usually 
multiple) bivariage affinities are to be estimated.{p_end}

{phang}
{opt mul:tivariate} if specified, invoke a multivariate analysis instead of the (multiple) bivariate 
analyses that are performed by default if Syntax 1 is employed. Alternatively the second syntax (above) 
can be employed to more efficiently produce multiple multivariate analyses.

{phang}
{opt log:it} if specified, invokes a logit model instead of linear regression (the default).{p_end}

{phang}
{opt adj:ust(constant|mean|no)} if specified, adjusts the y_hat by subtracting the context mean 
(default) or subtracting the constant term. Alternatively, make no adjustment. Note that, when a logit
model is optioned, the adjustment takes place on propensity values and then mapped back to probability
values.{p_end}

{p 2}{ul:Data-structure options}{p_end}

{phang}
{opt con:textvars(varlist)} (generally unspecified) the variables (e.g. country and year) whose combinations of 
values identify different contexts for each of which yhat generic variables will be separately 
estimated. By default, context varnames are taken from a Stata .dta file's {help char:characteristic} 
established by {cmd:stackMe}'s command {cmdab:SMset:contexts} the first time this 
file was opened for {help use} by a {cmd:stackMe} command; so this option is required if the default is 
to be overriden (perhaps in order to impute missing values for a variable that is entirely missing in 
some context or contexts).{p_end}

{phang}
{opt nocon:texts} if specified, override the default behavior that generates y-hats for each context 
separately.{p_end}

{phang}
{opt nosta:cks} if present, overrides the default behavior of treating each stack as a separate context 
(has no effect if the {cmd:genyhats} command was issued before stacking).{p_end}

{p 2}{ul:Output and naming options}{p_end}

{phang}
{opt iprefix} if specified, provides a character string to prefix the names of bivariate y-hat affinity 
measures generated separately for each {help varlist:indepvar} named using syntax 1 (the bivariate 
regression syntax). The default is "yi_").{p_end}

{phang}
{opt dprefix} if specified, provides a character string to prefix the name of a single multivariate y-hat 
affinity measure generated for a single {help varlist:depvar} when using syntax 1 (the normally bivariate 
regression syntax) in order to perform a single multivariate analysis. The default is "yd_").{break} 
{space 3}For multiple multivariate analyses it is far more efficient to use syntax 2 (the normal multivariate 
regression syntax). Using that syntax, a yd_prefix can be placed before the depvarname, separated from that 
name by an underscore character ("_"). This permits a different prefix-string for each multivariate analysis,
which use of the {opt ydp:refix} option would not. In the absence of such a user-chosen string ending in "_", 
the prefix string "yd_" will be prepended automatically. However, use of the {opt ydp:refix} option does have 
the advantage of permitting a prefix that does not end with an underscore, at the cost of having to use 
Syntax 1, along with the {opt mul:tivariate} option, to specify the nature of that (single) multivariate 
analysis.{p_end}

{phang}
{opt replace} if specified, drops all original {it:indepvars} for all specified models after the 
generation of y-hats.{p_end}

{phang}
{opt effects(window|rtf|csv|html|no)} if specified, displays a table (in publication format) that 
summarizes the different effects of the same predictors in different stacks. The {cmd:window} option
flushes the table to the standard output, while the other options save the table in an external file,
according to the chosen file format (also used as a suffix to the resulting "yhats" filename). 
By default, z-values are reported, along with significance stars.
The {cmd:eformat()} option can be used to set the display format for reported coefficients.{p_end}

{phang}
{opt eformat(beta|default|custom)} if specified, changes the coefficient reported in 
tables generated by {cmd:effects}. {cmd:efmt()} accepts two types of values: either {cmd:beta} (in order 
to obtain beta coefficients) or any format string that is accepted by the {bf:{help estout##cells:cells()}} 
option of the {cmd:estout} command. As an example, {cmd:efmt(b(fmt(3)star))} displays b coefficients with 
three decimal digits and significance stars. To install estout type 'net sj 14-2 st0085_2'{p_end}

{p 2}{ul:Diagnostic options}{p_end}

{phang}
{opt limitdiag(#)} if specified, limits to # the number of contexts for which diagnostics will be 
reported.{p_end}

{phang}
{opt nodiag} if specified, equivalent to {opt lim:itdiag(0)}.{p_end}

{phang}
{opt extradiag} (seldom used) directly output the results of each individual regression for as many 
variables as specified in {opt lim:itdiag}.{p_end}


{title:Examples}

{phang2}{cmd:. genyhats religs income union educ,} {cmd:depvarname(vote) limitdiag(5)}{p_end}

{pstd}Using stacked data, generate yhat variables named "yi_relig", "yi_income", "yi_union" and "yi_educ" 
separately for each context (defined by the variables {it:cntryid year}) and (implicitly) {it:{cmd:SMstkid}}. 
Display diagnostics for the first five of those contexts.{p_end}

{phang2}{cmd:. genyhats class_vote: income union educ,} limitdiag(5)}{p_end}

{pstd}Using the same stacked data, estimate a yhat indicator of social class, operationalized as the optimal 
least-squares estimate of the prefixing {it:vote} depver based on income, education and union membership as 
{indepvar}s}. The resulting yhat will be named "class_vote". {bf:Note} that the descriptive word "class" appears 
as a string prefix to the varname prefix that names the dependent variable (and switches the {cmdab gendi:st} 
command into multivariate mode.{p_end}

{phang2}{cmd:. genyhats partylr1-partylr5 || } cuttaxes1-cuttaxes5 || partyid1-partyid5 , depvar(vote) 
limitdiag(9){p_end}

{pstd} In unstacked data, generate yhat variables for three batteries of independent variables. This example 
produces yhat measures that anticipate data stacking by producing multiple y-hat variables whose transformations 
make them well-suited to {help stackme##Genericvariable:generic variable} analysis in stacked data.{p_end}


{title:Generated Variables}

{synoptset 10 tabbed}{...}
{synopt:yi_{it:var1} yi_{it:var2} ... }(or other prefix set by option {bf:iprefix}) a set of estimated 
{help stackme##Affinitymeasures:affinity measures} derived from variables {it:var1, var2}, etc., by means of 
bivariate analyses in which those variables were each used to predict a {depvar} named in the {cmdab:genyh:ats} 
{opt dep:var} option. Variables {it:var1, var2}, etc., are left unchanged (unless replaced).{p_end}

{synopt:yd_{it:vote} yd_{it:turnout} ... }(or other prefix set by option {bf:dprefix}) a set of 
estimated {help stackme##Affinitymeasures:affinity measures} derived from variables seen as predictors of such 
{help varlist:depvars} by neans of multivariate analyses in which {help varlist:indepvars} were taken all 
together as predictors of the specified {help varlist:depvar}.

{synopt:{it:class_vote religs_vote} ... } a set of estimated 
measures with names {it:class_vote, religs_vote}, etc., where the prefixes "class", etc., were set by the 
{it:depvar} prefix at the start of the {varlist} that named the {indepvars} for a multivariate analysis, and where 
the name "vote" matches the name of the optioned dependent variable. That variable is left unchanged, unless replaced 
(be careful not to replace a variable that will be used as a depvar in subsequent varlists or subsequent calls on 
{cmd:genyhats}.{p_end}

{pstd}
The first example features variables with numeric suffixes, suggesting that the resulting yi_-prefixed yhat variables 
were created in unstacked data. The second and third examples are more likely to be seen with stacked data, where 
numeric suffixes are unusual.{p_end}
